Википедия
Материал из Википедии  свободной энциклопедии
Перейти к навигации
Перейти к поиску
У этого термина существуют и другие значения см
значения
Название
Уровень по
модели
Прикладной
Семейство
Порт
Назначение протокола
Разрешение доменных имён
Спецификация
Основные реализации клиенты
Встроен во все
сетевые ОС
Основные реализации
серверы
или
Медиафайлы на Викискладе
Пример структуры доменного имени
англ
система доменных имён  компьютерная
распределённая система
для получения информации о
доменах
Чаще всего используется для получения
адреса
по имени
хоста
компьютера или устройства получения информации о маршрутизации почты иили обслуживающих узлах для протоколов в домене
запись
Распределённая база данных
поддерживается с помощью иерархии
серверов
взаимодействующих по определённому
протоколу
Основой  является представление об иерархической структуре
имени
и
зонах
Каждый сервер отвечающий за имя может
передать
ответственность за дальнейшую часть домена другому серверу с административной точки зрения  другой организации или человеку что позволяет возложить ответственность за актуальность информации на серверы различных организаций людей отвечающих только за свою часть доменного имени
Начиная с  года в систему  внедряются средства проверки целостности передаваемых данных называемые
Передаваемые данные не шифруются но их достоверность проверяется криптографическими способами Внедряемый стандарт
обеспечивает передачу средствами  достоверной криптографической информации
сертификатов
используемых для установления безопасных и защищённых соединений
транспортного
и
прикладного
уровня
Содержание
Ключевые характеристики
Дополнительные возможности
История
Проблемы с безопасностью
Терминология и принципы работы
Рекурсия
Обратный запрос
Записи
Зарезервированные доменные имена
Интернациональные доменные имена
Программное обеспечение
См также
Примечания
Ссылки
Статьи
Документы
Ключевые характеристики
править
править код
обладает следующими характеристиками
Распределённость администрирования
Ответственность за разные части иерархической структуры несут разные люди или организации
Распределённость хранения информации
Каждый узел сети в обязательном порядке должен хранить только те данные которые входят в его
зону ответственности
и возможно адреса
корневых серверов
Кэширование
информации
Узел
может
хранить некоторое количество данных не из своей зоны ответственности для уменьшения нагрузки на сеть
Иерархическая структура
в которой все узлы объединены в
дерево
и каждый узел может или самостоятельно определять работу нижестоящих узлов или
делегировать
передавать их другим узлам
Резервирование
За хранение и обслуживание своих узлов зон отвечают обычно несколько серверов разделённые как физически так и логически что обеспечивает сохранность данных и продолжение работы даже в случае сбоя одного из узлов
важна для работы
Интернета
так как для соединения с узлом необходима информация о его
адресе
а для людей проще запоминать буквенные обычно осмысленные адреса чем последовательность цифр В некоторых случаях это позволяет использовать виртуальные серверы например серверы различая их по имени запроса Первоначально преобразование между доменными и адресами производилось с использованием специального
текстового файла
который составлялся централизованно и автоматически рассылался на каждую из машин в своей локальной сети С ростом Сети возникла необходимость в эффективном автоматизированном механизме которым и стала
была разработана
Полом Мокапетрисом
в
году
оригинальное описание механизмов работы содержится в
и
В
публикация
и
изменила спецификацию  и отменила
и
как устаревшие
Дополнительные возможности
править
править код
поддержка динамических обновлений
защита данных
и транзакций
поддержка различных типов информации
История
править
править код
Использование более простого и запоминающегося имени вместо числового адреса хоста относится к эпохе
Стэнфордский исследовательский институт теперь
англ
поддерживал текстовый файл
который сопоставлял имена узлов с числовыми адресами компьютеров в
За поддержание числовых адресов называемых списком присвоенных номеров отвечал
Джон Постел
в Институте информационных наук
Университета Южной Калифорнии
Адреса назначались вручную Чтобы запросить имя хоста и адрес и добавить компьютер в главный файл пользователи связывались с
сетевым информационным центром
руководившимся
Элизабет Фейнлер
по телефону в рабочее время
К началу х годов поддержание единой централизованной таблицы хостов стало медленным и громоздким а развивающейся сети требовалась автоматическая система именования для решения технических и кадровых вопросов Постел поставил перед собой задачу выработать компромисс между пятью конкурирующими предложениями для решения задачи сформулированной
Полом Мокапетрисом
англ
Мокапетрис вместо этого создал концепцию иерархической системы доменных имен
Рабочая группа
опубликовала оригинальные спецификации в
и
в ноябре  года
В  году четыре студента
Дуглас Терри Марк Пейнтер Дэвид Риггл и Сонгниан Чжоу написали первую версию сервера имен
В  году Кевин Данлэп из  существенно пересмотрел реализацию  Майк Карел Фил Альмквист и Пол Викси поддерживали
с тех пор В начале х годов
был перенесен на платформу
Он широко распространен особенно в системах и попрежнему является наиболее широко используемым программным обеспечением  в Интернете
В ноябре  года были приняты спецификации
и
После этого были приняты сотни
изменяющих и дополняющих
Проблемы с безопасностью
править
править код
Первоначально проблемы безопасности не были основными соображениями при разработке программного обеспечения  или любого программного обеспечения для развёртывания в раннем Интернете поскольку сеть не была открыта для широкой общественности Однако рост Интернета в коммерческом секторе в х годах изменил требования к мерам безопасности для защиты целостности данных и аутентификации пользователей
Несколько уязвимостей были обнаружены и использованы злоумышленниками Одной из таких проблем является
отравление кэша
в котором данные распространяются на кэширующие преобразователи под предлогом того что они являются авторитетным сервером происхождения тем самым загрязняя хранилище данных потенциально ложной информацией и длительными сроками действия время жизни Впоследствии запросы легитимных приложений могут быть перенаправлены на сетевые хосты контролируемые злоумышленником
ответы ранее не имели криптографической подписи что давало возможность для множества вариантов атаки Современные расширения системы безопасности доменных имен
изменяют  чтобы добавить поддержку криптографически подписанных ответов Другие расширения такие как  добавляют поддержку криптографической аутентификации между доверенными одноранговыми узлами и обычно используются для авторизации передачи зоны или операций динамического обновления
Некоторые доменные имена могут использоваться для достижения эффектов спуфинга Например  и   это разные имена но пользователи могут не различать их в графическом пользовательском интерфейсе в зависимости от выбранного шрифта пользователя Во многих шрифтах буква  и цифра  выглядят очень похожими или даже идентичными Эта проблема остро стоит в системах которые поддерживают интернационализированные доменные имена поскольку многие коды символов в
могут отображаться на типичных экранах компьютеров Эта уязвимость иногда используется в
фишинге
Для подтверждения результатов  также могут использоваться такие методы как обратный  с подтверждением прямых записей но криптографически достоверными они не являются при этом не учитывается вариант
подмены маршрутной информации
англ
Терминология и принципы работы
править
править код
Ключевыми понятиями  являются
Домен
англ
область  узел в дереве имён вместе со всеми подчинёнными ему узлами если таковые имеются то есть именованная
ветвь
или
поддерево
в дереве имён Структура доменного имени отражает порядок следования узлов в иерархии доменное имя читается слева направо от младших доменов к доменам высшего уровня в порядке повышения значимости вверху находится
корневой домен
имеющий идентификатор
точка ниже идут домены первого уровня
доменные зоны
затем  домены второго уровня третьего и т д например для адреса
домен первого уровня
второго
третьего
позволяет не указывать точку корневого домена
Поддомен
англ
подчинённый домен например
поддомен домена
а
домена
Теоретически такое деление может достигать глубины  уровней а каждая метка может содержать до  символов пока общая длина вместе с точками не достигнет  символов Но на практике
регистраторы доменных имён
используют более строгие ограничения Например если у вас есть домен вида
вы можете создать для него различные поддомены вида
и т д
Ресурсная запись
единица хранения и передачи информации в  Каждая ресурсная запись имеет
имя
то есть привязана к определённому
доменному имени
узлу в дереве имён
тип
и
поле данных
формат и содержание которого зависит от
типа
Зона
часть дерева доменных имён включая
ресурсные записи
размещаемая как единое целое на некотором сервере доменных имён
сервере
см ниже а чаще  одновременно на нескольких серверах см ниже Целью выделения части дерева в отдельную зону является передача
ответственности
см ниже за соответствующий
домен
другому лицу или организации Это называется
делегированием
см ниже Как связная часть дерева
зона
внутри тоже представляет собой дерево Если рассматривать пространство имён  как структуру из зон а не отдельных узловимён тоже получается дерево оправданно говорить о родительских и дочерних зонах о старших и подчинённых На практике большинство зон го и го уровня     состоят из единственного узла которому непосредственно подчиняются дочерние зоны В больших корпоративных доменах го и более уровней иногда встречается образование дополнительных подчинённых уровней без выделения их в дочерние зоны
Делегирование
операция передачи
ответственности
за часть дерева доменных имён другому лицу или организации За счёт делегирования в  обеспечивается распределённость администрирования и хранения Технически
делегирование
выражается в выделении этой части дерева в отдельную
зону
и размещении этой
зоны
на
сервере
см ниже управляемом этим лицом или организацией При этом в родительскую зону включаются
склеивающие
ресурсные записи
и А содержащие указатели на
серверы
дочерней зоны а вся остальная информация относящаяся к дочерней зоне хранится уже на
серверах
дочерней зоны
сервер
специализированное ПО для обслуживания  а также компьютер на котором это ПО выполняется сервер может быть ответственным за некоторые зоны иили может перенаправлять запросы вышестоящим серверам
клиент
специализированная библиотека или программа для работы с  В ряде случаев сервер выступает в роли клиента
Авторитетность
англ
признак размещения зоны на сервере Ответы серверы могут быть двух типов
авторитетные
когда сервер заявляет что сам отвечает за зону и
неавторитетные
англ
когда сервер обрабатывает запрос и возвращает ответ других серверов В некоторых случаях вместо передачи запроса дальше сервер может вернуть уже известное ему по запросам ранее значение режим кеширования
запрос
англ
запрос от клиента или сервера серверу Запрос может быть
рекурсивным
или
нерекурсивным
см
Рекурсия
Система  содержит иерархию
серверов
соответствующую иерархии
зон
Каждая
зона
поддерживается как минимум одним
авторитетным сервером
от
англ
авторитетный на котором расположена информация о домене
Имя и адрес не
тождественны
один адрес может иметь множество имён что позволяет поддерживать на одном компьютере множество
вебсайтов
это называется
виртуальный хостинг
Обратное тоже справедливо  одному имени может быть сопоставлено множество адресов это позволяет создавать
балансировку нагрузки
Для повышения устойчивости системы используется множество серверов содержащих идентичную информацию а в протоколе есть средства позволяющие поддерживать синхронность информации расположенной на разных серверах Существует
корневых серверов
их адреса практически не изменяются
Протокол  использует для работы
или
порт
для ответов на запросы Традиционно запросы и ответы отправляются в виде одной
датаграммы
используется когда размер данных ответа превышает  байт и для
запросов
Рекурсия
править
править код
Термином
рекурсия
в  обозначают алгоритм поведения
сервера
выполнить от имени клиента полный поиск нужной информации во всей системе  при необходимости обращаясь к другим
серверам
запрос
может быть
рекурсивным
требующим полного поиска  и
нерекурсивным
или
итеративным
не требующим полного поиска
Аналогично
сервер
может быть
рекурсивным
умеющим выполнять полный поиск и
нерекурсивным
не умеющим выполнять полного поиска Некоторые программы серверов например
можно сконфигурировать так чтобы запросы одних клиентов выполнялись
рекурсивно
а запросы других
нерекурсивно
При ответе на
нерекурсивный
запрос а также при неумении или запрете выполнять
рекурсивные
запросы сервер либо возвращает данные о зоне за которую он
ответственен
либо возвращает ошибку Настройки нерекурсивного сервера когда при ответе выдаются адреса серверов которые обладают большим объёмом информации о запрошенной зоне чем отвечающий сервер чаще всего  адреса корневых серверов являются некорректными и такой сервер может быть использован для организации
атак
В случае
рекурсивного
запроса
сервер
опрашивает серверы в порядке убывания уровня зон в имени пока не найдёт ответ или не обнаружит что домена не существует на практике поиск начинается с наиболее близких к искомому серверов если информация о них есть в кэше и не устарела сервер может не запрашивать другие серверы
Рассмотрим на примере работу всей системы
Предположим мы набрали в
браузере
адрес
Браузер ищет соответствие этого адреса адресу в файле
Если файл не содержит соответствия то далее браузер спрашивает у сервера  какой адрес у
Однако сервер  может ничего не знать не только о запрошенном имени но и даже обо всём домене
В этом случае сервер обращается к
корневому серверу
например  Этот сервер сообщает  У меня нет информации о данном адресе но я знаю что  является ответственным за зону
Тогда сервер  направляет свой запрос к  но тот отвечает У меня нет информации о данном сервере но я знаю что  является ответственным за зону
Наконец тот же запрос отправляется к третьему серверу и получает ответ  адрес который и передаётся клиенту  браузеру
В данном случае при разрешении имени то есть в процессе поиска  по имени
браузер отправил известному ему серверу
рекурсивный
запрос  в ответ на такой тип запроса сервер обязан вернуть готовый результат то есть адрес либо пустой ответ и код ошибки
сервер получивший запрос от браузера последовательно отправлял
нерекурсивные
запросы на которые получал от других серверов ответы пока не получил ответ от сервера ответственного за запрошенную зону
остальные упоминавшиеся серверы обрабатывали запросы
нерекурсивно
и скорее всего не стали бы обрабатывать запросы рекурсивно даже если бы такое требование стояло в запросе
Иногда допускается чтобы запрошенный сервер передавал
рекурсивный
запрос вышестоящему серверу и дожидался готового ответа
При
рекурсивной
обработке запросов все ответы проходят через сервер и он получает возможность
кэшировать
их Повторный запрос на те же имена обычно не идёт дальше
кэша
сервера обращений к другим серверам не происходит вообще Допустимое время хранения ответов в
кэше
приходит вместе с ответами поле
ресурсной записи
Рекурсивные запросы требуют больше ресурсов от сервера и создают больше трафика так что обычно принимаются от известных владельцу сервера узлов например провайдер предоставляет возможность делать рекурсивные запросы только своим клиентам в корпоративной сети рекурсивные запросы принимаются только из локального сегмента Нерекурсивные запросы обычно принимаются ото всех узлов сети и содержательный ответ даётся только на запросы о зоне которая размещена на узле на запрос о других зонах обычно возвращаются адреса других серверов
Обратный запрос
править
править код
Основная статья
Обратный просмотр
используется в первую очередь для преобразования символьных имён в адреса но он также может выполнять обратный процесс Для этого используются уже имеющиеся средства  Дело в том что с записью  могут быть сопоставлены различные данные в том числе и какоелибо символьное имя Существует специальный домен
записи в котором используются для преобразования адресов в символьные имена Например для получения доменного имени для адреса
можно запросить у сервера запись
и тот вернёт соответствующее символьное имя Обратный порядок записи частей адреса объясняется тем что в адресах старшие биты расположены в начале а в доменных именах старшие находящиеся ближе к корню части расположены в конце
Записи
править
править код
Основная статья
Типы ресурсных записей
Записи
или
ресурсные записи
англ
единицы хранения и передачи информации в  Каждая ресурсная запись состоит из следующих полей
имя
доменное имя к которому привязана или которому принадлежит данная ресурсная запись
тип
ресурсной записи  определяет формат и назначение данной ресурсной записи
класс
ресурсной записи
теоретически
считается что  может использоваться не только с
но и с другими типами сетей код в поле
класс
определяет тип сети
допустимое время хранения данной ресурсной записи в кэше
неответственного
сервера
длина поля данных
поле данных
формат и содержание которого зависит от
типа
записи
Наиболее важные типы записей
Запись
или
запись адреса
связывает имя хоста с адресом протокола  Например запрос записи на имя
вернёт его адрес
Запись
связывает имя хоста с адресом протокола
Например запрос записи на имя
вернёт его
адрес
Запись
или
каноническая запись имени
псевдоним используется для перенаправления на другое имя
Запись
или
почтовый обменник
указывает
серверы обмена почтой
для данного домена
Запись
указывает на
сервер
для данного домена
Запись
обратная
запись
или
запись указателя
связывает адрес хоста с его каноническим именем Запрос в домене
на адрес хоста в форме вернёт имя
данного хоста см
Обратный запрос
Например на момент написания для адреса
запрос записи
вернёт его каноническое имя
В целях уменьшения объёма нежелательной корреспонденции спама многие серверыполучатели электронной почты могут проверять наличие записи для хоста с которого происходит отправка В этом случае запись для адреса должна соответствовать имени отправляющего почтового сервера которым он представляется в процессе
сессии
Запись
или
начальная запись зоны
указывает на каком сервере хранится эталонная информация о данном домене содержит контактную информацию лица ответственного за данную зону
тайминги
параметры времени кеширования зонной информации и взаимодействия серверов
запись
указывает на серверы для сервисов используется в частности для
и
Прочие записи
запись
позволяет указать географическое положение сервера
Зарезервированные доменные имена
править
править код
Документ
Зарезервированные имена доменов верхнего уровня определяет названия доменов которые следует использовать в качестве примеров например в документации а также для тестирования Кроме
и
в эту группу также входят
и др
Интернациональные доменные имена
править
править код
Доменное имя может состоять только из ограниченного набора
символов позволяя набрать адрес домена независимо от языка пользователя
утвердил основанную на
систему
преобразующую любую строку в кодировке
в допустимый  набор символов
Программное обеспечение
править
править код
Серверы имен
в серверных версиях операционных систем
См также
править
править код
новый стандарт протокола
Альтернативные корневые серверы
Яндекс
Киберсквоттинг
Тайпсквоттинг
Динамический
распределение нагрузки между одинаковыми серверами
клиент
сервер
Передача зоны
Примечания
править
править код
День рождения системы
неопр
Дата обращения  июля
Архивировано
октября  года
с
Текущая версия корневой зоны всегда находится по адресу
англ
Дата обращения  февраля
Архивировано
августа  года
англ
Дата обращения  февраля
Архивировано
июня  года
англ
Дата обращения  февраля
Архивировано
апреля  года
Ссылки
править
править код
англ
Ресурсы посвящённые
Архивная копия
от  сентября  на
англ
Общество
англ
Повышение безопасности
англ
Рабочий комитет  занимающийся разработкой расширенной спецификации
англ
Сайт корневых серверов
англ
Просмотр записей домена
Вебинструменты для  каталог на сайте
Архивная копия
от  ноября  на
англ
Статьи
править
править код
Обзор схем и типов атак
Документы
править
править код
Для улучшения этой статьи
желательно
Переработать оформление в соответствии с
правилами написания статей
Обновить статью актуализировать данные
Оформить статью по
правилам
После исправления проблемы исключите её из списка Удалите шаблон если устранены все недостатки
Схемы
Официальные
Неофициальные
Основные
протоколы
по уровням
модели
Физический
Канальный
Сетевой
Транспортный
Сеансовый
Представления
Прикладной
Электронная почта
Передача файлов
Удалённый доступ
Другие прикладные
Список портов  и
Компоненты
Основные
Диспетчер окон рабочего стола
Панель задач
Пуск
Область уведомлений
Проводник
Пространство имён
Ассоциации файлов
Поиск
Теневая копия
Консоль
Службы
управления
Служба архивации и восстановления
Средство переноса данных
Просмотр событий
Проверка системных файлов
Индекс производительности
Центр обновления
Восстановление системы
Дефрагментация диска
Диспетчер задач
Диспетчер устройств
Консоль управления
Очистка диска
Параметры
Панель управления
Приложения
Блокнот
Записки
Журнал
Звукозапись
Ножницы
Проигрыватель
Распознавание речи
Просмотр фотографий
Таблица символов
Факсы и сканирование
Центр мобильности
Центр устройств
Экранная лупа
Удалённый помощник
Календарь
Калькулятор
Кортана
Музыка
Люди
Параметры
Почта
Фотографии
Экранный диктор
Исторические
Киностудия
Диспетчер программ
Диспетчер файлов
Фотоальбом
Контакты
студия
Боковая панель
Игры
Пасьянсы
Косынка
Паук
Солитер
Сапёр
Пинбол
Червы
Ядро ОС
Реестр
Служба
Диспетчер управления службами
Диспетчер загрузки
Программа входа в систему
Консоль восстановления
Защита ядра от изменений
Службы
Отчёты об ошибках
Планировщик классов мультимедиа
Теневая копия
Планировщик задач
Беспроводная настройка
Файловые
системы
Точка соединения
Точка повторной обработки
Серверы
Службы развёртывания
Служба репликации файлов
Служба доменов
Защита доступа к сети
Службы печати для
Службы удалённой установки
Службы управления правами
Перемещаемые профили пользователей
Диспетчер системных ресурсов
Программа удалённого администрирования
Координатор распределённых транзакций
Архитектура
Диспетчер объектов
Пакеты запроса вводавывода
Диспетчер транзакций ядра
Диспетчер логических дисков
Диспетчер учётных записей безопасности
Защита ресурсов
Запуск
Безопасность
Защитник
Предотвращение выполнения данных
Обязательный контроль целостности
Брандмауэр
Центр обеспечения безопасности
Защита файлов
Совместимость
Подсистема
Виртуальная машина
Источник
Категории
Стандарты Интернета
Интернетпротоколы
Скрытые категории
Википедия  не указан язык
ПРОИТСтатьи по алфавиту
ПРОИТПоследняя правка в текущем месяце
ВикипедияСтраницы с шаблоном нп без дополнительного текста
ВикипедияСтатьи с неэнциклопедическим содержанием
ВикипедияСтатьи для обновления
ВикипедияСтатьи с проблемами в оформлении
ВикипедияСтатьи с шаблонами недостатков по алфавиту
Страницы использующие волшебные ссылки
Навигация
Персональные инструменты
Вы не представились системе
Обсуждение
Вклад
Создать учётную запись
Войти
Пространства имён
Статья
Обсуждение
русский
Просмотры
Читать
Править
Править код
История
Ещё
Поиск
Навигация
Заглавная страница
Содержание
Избранные статьи
Случайная статья
Текущие события
Пожертвовать
Участие
Сообщить об ошибке
Как править статьи
Сообщество
Форум
Справка
Свежие правки
Новые страницы
Служебные страницы
Инструменты
Ссылки сюда
Связанные правки
Постоянная ссылка
Сведения о странице
Цитировать страницу
Получить короткий
Скачать код
Печатьэкспорт
Скачать как
Версия для печати
В других проектах
Викисклад
Викиновости
Элемент Викиданных
На других языках
Беларуская
Беларуская тарашкевца
Български
азаша
Кыргызча
Олык марий
Македонски
Монгол
Саха тыла
српскохрватски
Српски
Укранська
Править ссылки
Эта страница в последний раз была отредактирована  марта  в
Текст доступен по
лицензии   С указанием авторства  С сохранением условий
в отдельных случаях могут действовать дополнительные условия
Подробнее см
Условия использования
зарегистрированный товарный знак некоммерческой организации
Фонд Викимедиа
Политика конфиденциальности
Описание Википедии
Отказ от ответственности
Свяжитесь с нами
Кодекс поведения
Разработчики
Статистика
Заявление о куки
Мобильная версия